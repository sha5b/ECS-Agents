#pragma kernel UpdateEnvironmentalVolume

// Input data
RWTexture3D<float4> VolumeTexture;
StructuredBuffer<float> Temperature;
StructuredBuffer<float> Moisture;
StructuredBuffer<float> WindSpeed;
StructuredBuffer<int> Biomes;

// Parameters
int3 GridSize;

// Helper function to get 1D index from 3D position
int GetIndex(uint3 pos)
{
    return pos.x + GridSize.x * (pos.y + GridSize.y * pos.z);
}

// Normalize temperature from -20 to 40 range to 0-1
float NormalizeTemperature(float temp)
{
    return (temp + 20.0) / 60.0;
}

// Normalize wind speed from 0-20 range to 0-1
float NormalizeWindSpeed(float speed)
{
    return speed / 20.0;
}

// Normalize biome index to 0-1 range (9 biomes)
float NormalizeBiome(int biome)
{
    return (float)biome / 8.0;
}

[numthreads(8,8,8)]
void UpdateEnvironmentalVolume(uint3 id : SV_DispatchThreadID)
{
    // Check if within bounds
    if (any(id >= (uint3)GridSize))
        return;

    int index = GetIndex(id);

    // Pack environmental data into RGBA channels
    float4 data;
    data.r = NormalizeTemperature(Temperature[index]);  // Temperature in R channel
    data.g = Moisture[index];                          // Moisture in G channel (already 0-1)
    data.b = NormalizeWindSpeed(WindSpeed[index]);     // Wind Speed in B channel
    data.a = NormalizeBiome(Biomes[index]);           // Biome in A channel

    // Write to volume texture
    VolumeTexture[id] = data;
}
